#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrreprt
\begin_preamble
% verschieden Symbole, Zeichen wie (c), €
\usepackage{textcomp,units}

% Mehr Platz zwischen Tabelle und Untertitel
\usepackage{caption}
\captionsetup[table]{skip=10pt}

%Kapitelzahl sehr groß
\makeatletter% siehe De-TeX-FAQ 
 \renewcommand*{\chapterformat}{% 
   \begingroup% damit \unitlength-Änderung lokal bleibt 
     \setlength{\unitlength}{1mm}% 
     \begin{picture}(10,10)(0,5) 
       \setlength{\fboxsep}{0pt} 
       %\put(0,0){\framebox(20,40){}}% 
       %\put(0,20){\makebox(20,20){\rule{20\unitlength}{20\unitlength}}}% 
       \put(10,15){\line(1,0){\dimexpr 
           \textwidth-20\unitlength\relax\@gobble}}% 
       \put(0,0){\makebox(10,20)[r]{% 
           \fontsize{28\unitlength}{28\unitlength}\selectfont\thechapter 
           \kern-.05em% Ziffer in der Zeichenzelle nach rechts schieben 
         }}% 
       \put(10,15){\makebox(\dimexpr 
           \textwidth-20\unitlength\relax\@gobble,\ht\strutbox\@gobble)[l]{% 
             \ \normalsize\color{black}\chapapp~\thechapter\autodot 
           }}% 
     \end{picture} % <-- Leerzeichen ist hier beabsichtigt! 
   \endgroup 
}

\usepackage{ %a4wide,
            ellipsis, fixltx2e, mparhack,   %Fehlerkorrektur für Marginalien
            booktabs, longtable             %schönere Tabellen
}  

\usepackage[automark]{scrpage2}
%\automark[chapter]{chapter}
\clearscrheadfoot
\ohead{\\\headmark}
\ihead{\includegraphics[scale=0.15]{logo.jpg}}%\pagemark}
\ofoot[\pagemark]{\pagemark}


%Kurzfassung und Abstract (englisch) auf eine Seite
\renewenvironment{abstract}{
    \@beginparpenalty\@lowpenalty
      \begin{center}
        \normalfont\sectfont\nobreak\abstractname
        \@endparpenalty\@M
      \end{center}
}{
    \par
}



% schönerer Blocksatz!!
\usepackage{microtype}

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used

%set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}{\usepackage{lmodern}}
  {\usepackage[scaled=0.92]{helvet}
    \usepackage{mathptmx}
    \usepackage{courier} }
\fi

 % the pages of the TOC are numbered roman
 % and a pdf-bookmark for the TOC is added
 \pagenumbering{roman}
 \let\myTOC\tableofcontents
 \renewcommand\tableofcontents{
   %\pdfbookmark[1]{Contents}{}
   \myTOC
   \clearpage
   \pagenumbering{arabic}}

%Bezeichungen anpassen
%Babelpaket muß zuvor geladen werden
%\usepackage[ngerman]{babel}
\addto\captionsngerman{ 
\renewcommand{\figurename}{Abb.}% 
\renewcommand{\tablename}{Tab.}% 
\renewcommand{\abstractname}{Kurzfassung}
%\renewcommand{\nomname}{Abkürzungen}
}

%\usepackage[english]{babel}

% Alle Querverweise und URLs als Link darstellen
% In der PDF-Ausgabe
 \usepackage[colorlinks=true, bookmarks, bookmarksnumbered, bookmarksopen, bookmarksopenlevel=1,
  linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,
  pdfpagelayout=OneColumn, pdfnewwindow=true,
  pdfstartview=XYZ, plainpages=false, pdfpagelabels,
  pdfauthor={LyX Team}, pdftex,
  pdftitle={LyX's Figure, Table, Floats, Notes, and Boxes manual},
  pdfsubject={LyX-documentation about figures, tables, floats, notes, and boxes},
  pdfkeywords={LyX, Tables, Figures, Floats, Boxes, Notes}]{hyperref}

%mehr Platz zwischen Überschrift und Tabelle
\newcommand{\@ldtable}{}
\let\@ldtable\table
\renewcommand{\table}{ %
                 \setlength{\@tempdima}{\abovecaptionskip} %
                 \setlength{\abovecaptionskip}{\belowcaptionskip} %
                 \setlength{\belowcaptionskip}{\@tempdima} %
                 \@ldtable}

%In dieser Arbeit wird auf die Nomenklatur als Abkürzungsverzeichnis verzichtet. Bei Wunsch wieder aktivieren.
%Nomenklatur als Abkürzungsverzeichnis verwenden
%\renewcommand{\nomname}{Abkürzungsverzeichnis}
%\renewcommand{\nomlabelwidth}{20mm}

%Nomenklatur als Glossar verwenden
%Nur Noetig wenn auch Glossar verwendet wird.
\renewcommand{\nomname}{Glossar}
\renewcommand{\maketitle}{}
\renewcommand{\contentsname}{Whatever}

\addto\captionsenglish{% Replace "english" with the language you use
  \renewcommand{\contentsname}%
    {Whatever}%
}

%Farbe für Programmcode festlegen
\definecolor{lightgray}{rgb}{0.8,0.8,0.8}

\usepackage{qtree}
\end_preamble
\options english, pointlessnumbers, abstracton, headsepline,
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 120 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing other 1.2
\use_hyperref false
\pdf_title "Analyse und Interpretation des Risswachstums an thermisch hochbelasteten Bauteilen für die Fusionsforschung mittels IR Diagnostik und FE Modellierung"
\pdf_author "Timo Schindler"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\topmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\bullet 2 0 9 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
titlepage
\end_layout

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename H:/MA/bilder/logo_fb1.jpg
	lyxscale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset VSpace 7cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size larger
Master Thesis
\end_layout

\begin_layout Standard
\noindent
\align center

\size large
Design and implementation of a verifier for sequential programs using the
 Hoare calculus
\end_layout

\begin_layout Standard
\noindent
\align left

\size larger
\begin_inset VSpace 2cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
submitted by:
\begin_inset space \hspace{}
\length 1cm
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Florian Wege
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Student number: 15856
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field of studies: Information and Communication Systems
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Merseburg University of Applied Sciences
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
supervised by:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prof.
 Dr.
 phil.
 Dr.
 rer.
 nat.
 habil.
 Michael Schenke
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Merseburg University of Applied Sciences
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prof.
 Dr.
 rer.
 nat.
 habil.
 Eckhard Liebscher
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Merseburg University of Applied Sciences
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Merseburg, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "LAN"
description "Local Area Network"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{7}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 17.1mm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
In todays world there is ever so more digitalization in manifold applications.
 That ranges from ...
 to ...
 and affects our life.
\end_layout

\begin_layout Standard
eg.:
\end_layout

\begin_layout Standard
bookings
\end_layout

\begin_layout Standard
ATMs
\end_layout

\begin_layout Standard
control of trains, airplanes
\end_layout

\begin_layout Standard
autonomouos driving
\end_layout

\begin_layout Standard
there is the important safety aspect for customer/end user
\end_layout

\begin_layout Standard
correctness important, program has to fulfill specifications
\end_layout

\begin_layout Standard
need for a method for the systematic creation of programs
\end_layout

\begin_layout Standard
When dealing with parallelism, the components need to be coordinated to
 not interfere each other or trigger a deadlock.
 Verify absence of errors.
 Discipline of program verifications commits itself to systematically approachin
g the proof of accuracy, that is, checking a model against a specification.
\end_layout

\begin_layout Standard
sequential programs are the basis, they only possess one flow of control
\end_layout

\begin_layout Standard
usual desired features of sequential programs:
\end_layout

\begin_layout Standard
partial correctness: if the algorithm returns a result (terminates), it
 is correct in reference to the statement of the problem.
 The termination is not guaranteed.
\end_layout

\begin_layout Standard
termination: the algorithm terminates for all designated inputs, else the
 algorithm is said to diverge
\end_layout

\begin_layout Standard
no run time errors: no undefined operations like division by zero occur
\end_layout

\begin_layout Standard
example: different sorting algorithms
\end_layout

\begin_layout Standard
of course those characteristics are also desired for parallel programs,
 additionally:
\end_layout

\begin_layout Standard
no interference
\end_layout

\begin_layout Standard
no deadlocks
\end_layout

\begin_layout Standard
maybe correct without fairness or enforcement of a certain fairness
\end_layout

\begin_layout Standard
mathematical logic
\end_layout

\begin_layout Standard
what is correctness
\end_layout

\begin_layout Standard
axiomatic method (1969 Hoare) describes program properties by predicate
 logic, proof system determines the real program behavior by analyzing the
 syntactical structure of the code inductively.
\end_layout

\begin_layout Standard
the disadvantages of the axiomatic approach are that those rules are only
 suited for the verification, not for the development of a program, only
 the behavior in reference to input/output, not considering finite/infinite
 executions (operating system), fairness is ignored
\end_layout

\begin_layout Standard
proof system for each class of programs
\end_layout

\begin_layout Standard
//Motivation
\end_layout

\begin_layout Standard
//Problemfeld aufblähen
\end_layout

\begin_layout Standard
Problem formulieren
\end_layout

\begin_layout Standard
Vorgehensweise zur Lösung darlegen
\end_layout

\begin_layout Standard
Ergebnisse der Arbeit anschneiden
\end_layout

\begin_layout Standard
Organisation der Arbeit, Gliederung
\end_layout

\begin_layout Standard
Musskriterieren/Sollkriterien/Kannkriterien
\end_layout

\begin_layout Standard
—
\end_layout

\begin_layout Standard
a lot of time is invested in debugging a program
\end_layout

\begin_layout Standard
safety-critical applications
\end_layout

\begin_layout Standard
what is programm correctness?
\end_layout

\begin_layout Standard
what is the purpose of this paper?
\end_layout

\begin_layout Standard
—
\end_layout

\begin_layout Standard
lexer divides raw string into syntactical elements called tokens.
 This makes it easier to write the parser rules for the grammar as there
 will be less back tracking.
 Lexer rules are typically described by regular expressions or fixed character
 sequences for keywords.
\end_layout

\begin_layout Standard
For example: the instruction 'SKIP', which will be used to indicate that
 the program should do nothing at this point, can be expressed by directly
 matching the next four characters of the string input against 'SKIP'
\end_layout

\begin_layout Standard
on the other hand, if you want to match a set of combinations of characters
 for a variable name for example, like usually in programming languages,
 they can start by a letter or an underscore and then any variation of letters,
 underscores and digits, it would be tedious to try every possibility.
 Therefore regular expressions are a way to specify patterns and most practical
 programming languages have an implementation to search a string according
 to these patterns.
\end_layout

\begin_layout Standard
Logical expressions as assertions (of states) or conditions (for states).
\end_layout

\begin_layout Chapter
Grammar/Parser
\end_layout

\begin_layout Standard
So to verify a program using the Hoare calculus, at least a tokenizer and
 a syntactical analyzer are required to obtain the syntax tree from the
 raw string input.
\end_layout

\begin_layout Standard
G=(N,E,P,S)
\end_layout

\begin_layout Standard
N - set of non-terminal symbols
\end_layout

\begin_layout Standard
E - set of terminal symbols
\end_layout

\begin_layout Standard
P - production rules
\end_layout

\begin_layout Standard
S - start symbol
\end_layout

\begin_layout Standard
A grammar consists of variables (also called non-terminals), terminals,
 which are the rules for the lexer, production rules and a starting symbol.
 The starting symbol tells the parser what rule patterns to consider first.
\end_layout

\begin_layout Standard
The grammar describes a specific language that it accepts or can be built
 using it.
\end_layout

\begin_layout Standard
Both the tokenizer and parser rely on the same grammar.
\end_layout

\begin_layout Standard
—
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Tree[.E [.E [.E 
\backslash
textit{id} ] * [.E 
\backslash
textit{id} ] ] + [.E 
\backslash
textit{id} ] ]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
—
\end_layout

\begin_layout Standard
Construction of the grammar
\end_layout

\begin_layout Standard
Compiler high level to low level language
\end_layout

\begin_layout Standard
low level language uncomfortable, platform-dependent
\end_layout

\begin_layout Standard
highlevel > preprocessor > compiler > assembly > assembler > machine code
 (relocatable) > loader/linker > executable/machine code (absolute)
\end_layout

\begin_layout Standard
HLL > lexical analysis > stream of tokens > syntax analysis (parser) > parse
 tree > semantic analysis > semantically verified parse tree > intermediate
 code generation > three address code > code optimization > reduced program
 size/lines of code > target code generation > assembly
\end_layout

\begin_layout Standard
front end, back end of compiler
\end_layout

\begin_layout Standard
errorhandler+symbol table manager for all modules
\end_layout

\begin_layout Standard
lexer/tokenizer takes raw text and outputs tokens, kicks comments and maybe
 whitespace
\end_layout

\begin_layout Standard
grammar (context-free) LR1
\end_layout

\begin_layout Standard
Hoare needs to go from right to left, parser from left to right > cannot
 be parallel
\end_layout

\begin_layout Standard
left most derivation (replace left most variable), right most derivation
 (exp example)
\end_layout

\begin_layout Standard
ambiguous grammars (more than one tree for same string), make them unambiguous,
 left/right associativity, operator precedence
\end_layout

\begin_layout Standard
modify grammar, for left associativity -> left recursive -> E>E+id|id, precedenc
e -> different levels -> E>E+T|T T>T*F|F
\end_layout

\begin_layout Standard
with fixed associativity, it becomes unambiguous
\end_layout

\begin_layout Standard
left recursion would cause infinite loop A{ A(); a)
\end_layout

\begin_layout Standard
top-down-parser have problems with LR, A>ba* -> A>bA' A'>eps|aA' <=> A>aA/B,
 LR to RR conversion
\end_layout

\begin_layout Standard
deterministic, non-deterministic grammar -> different options for productions
 -> back-tracking, common prefixes problem, left factoring A>ab|ac|ad ->
 A>aA' A'>b|c|d
\end_layout

\begin_layout Chapter
Konzept
\end_layout

\begin_layout Chapter
Implementierung
\end_layout

\begin_layout Chapter
Abschluss/Fazit
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter*
Anhang
\end_layout

\begin_layout Standard
Gate Lectures by Ravindrababu Ravula
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Dieser Code ist noetig, da sonst die falsche Seitenzahl im Inhaltsverzeichnis
 angezeigt wird
\end_layout

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\begin_layout Plain Layout


\backslash
phantomsection
\end_layout

\begin_layout Plain Layout

% Die folgende Zeile sorgt dafuer, dass der Glossar im Inhaltsverzeichnis
 angezeigt wird.
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Glossar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "APT"
description "Advanced Packaging Tool (kurz. APT) ist ein Paketverwaltungssystem das z.B. bei Debian und Ubuntu eingesetzt wird. Das Paketverwaltungssystem stellt einen Großteil der für das Betriebssystem verfügbaren Programme und Erweiterungen bereit. Diese können durch den Benutzer meist in der Befehlszeile oder über eine grafische Oberfläche installiert und konfiguriert werden. "

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "API"
description "Application Programming Interface (kurz API) ist eine Programmierschnittstelle die eine Anbindung von Außen an ein bestehendes System bietet. Die Schnittstelle wird vom Hersteller der Software zur Verfügung gestellt um Dritten die Möglichkeit eines Addons oder einer Erweiterung zu geben. Die Schnittstelle definiert dabei ein Standardformat und Standardbefehle."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Dieser Code ist noetig, da sonst die falsche Seitenzahl im Inhaltsverzeichnis
 angezeigt wird
\end_layout

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\begin_layout Plain Layout


\backslash
phantomsection
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "lib"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "vow.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 17.1mm
\end_inset


\end_layout

\begin_layout Section*
\noindent

\series bold
\size huge
Eidesstaatliche Erklärung
\end_layout

\begin_layout Standard
Ich erkläre hiermit ehrenwörtlich, dass ich die vorliegende Arbeit selbstständig
 angefertigt habe.
 Die aus fremden Quellen direkt oder indirekt übernommenen Gedanken sind
 als solche kenntlich gemacht.
 Es wurden keine anderen als die angegebenen Quellen und Hinweise verwendet.
 
\end_layout

\begin_layout Standard
Die vorliegende Arbeit wurde bisher keiner anderen Prüfungsbehörde vorgelegt
 und auch noch nicht veröffentlicht.
\end_layout

\begin_layout Standard
Ich bin mir bewusst, dass eine falsche Erklärung rechtliche Folgen haben
 wird.
\end_layout

\begin_layout Standard
\begin_inset VSpace 2cm
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle" tabularwidth="15cm">
<column alignment="center" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Merseburg, der 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[[UNTERSCHRIFT]]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Florian Wege
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*
Zitieren nach DIN 1505-2
\end_layout

\begin_layout Standard
Ich versuche immer nach DIN zu zitieren, ist aber echt eine Sache für sich.
 Hier gebe ich keine Garantie auf Richtigkeit.
 Bitte vorher mit dem Betreuer abklären.
\end_layout

\begin_layout Standard
Hier zitiere ich aus einem bestimmten Buch: Dieses Zitat ist aus einem spezielle
n Buch das ich am Ende angeben muss.
 Es sind sogar zwei Bücher, nur damit ihr das mal seht.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Williams201205,Siegert200612"

\end_inset


\end_layout

\begin_layout Standard
Es ist meist nicht gern gesehen wenn man aus dem Internet zitiert, aber
 wenn es doch mal nötig ist würde ich es so machen.
 
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:42"

\end_inset

 Übrigens könnt ihr bei Wikipedia direkt an die Bibtex-Informationen kommen.
 Einfach Links im Menü unter 
\begin_inset Quotes gld
\end_inset

Werkzeuge –> Seite zitieren
\begin_inset Quotes grd
\end_inset


\end_layout

\begin_layout Standard
Gesetztestexte müssen zum Beispiel nicht zitiert werden.
 Hier reicht ein Verweis in der Fußnote
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Das hier ist die supertolle Fußnote, hier steht jetzt irgendwas von BGB
 §12 Abs.
 3 Satz 4
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Zum Bearbeiten der Literatur-Datenbank verwende ich JabRef.
\end_layout

\begin_layout Section*
Bild mit Untertitel
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename C:/Users/Win7/Downloads/Bachelorarbeit - Vorlage/images/1799_Diplomarbeit_Schnitt.jpg
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dies ist ein sehr langer Text.
 Hier sollte das Bild so beschrieben werden, dass man auch eine Ahnung vom
 Bild hat, wenn man nur den Bilduntertitel liest.
 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Kurztitel der nur in Abb.
 Verzeichnis angezeigt wird
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Testbild"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In diesem Text verweise ich nun auf das eben genannte Bild (Vgl.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Testbild"

\end_inset

).
 Dazu muss im Bild eine sog.
 Marke eingefügt werden (in diesem Fall: fig:Testbild).
 Als Bildbreite ist in diesem Dokument 15cm gewählt.
 Dies sieht dann sehr passabel im Fließtext aus.
 Versucht bei den Breiten der Bilder einheitlich zu bleiben.
 Also 15cm und 10cm zum Beispiel.
 Dies hilft dem Leser und unterbricht nicht dauernd im Lesefluss.
 Im Fließtext umschlossene Bilder sind weniger gern gesehen in Bachelorarbeiten,
 aber hier auch wieder den Prof.
 fragen.
\end_layout

\begin_layout Section*
Tabelle mit Untertitel
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="3cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
titelzeile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Titel über zwei Spalten
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufzählungen
\end_layout

\begin_layout Itemize
1
\end_layout

\begin_layout Itemize
2
\end_layout

\begin_layout Itemize
3
\end_layout

\begin_layout Itemize
4
\end_layout

\begin_layout Plain Layout
gehen nur bei festgelegter Zeilenbreite
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auch Absätze gehen nur bei festgelegter Spaltenbreite.
\end_layout

\begin_layout Plain Layout
Wie man hier sieht!
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zwei Zeilen zusammenfassen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Genau wie bei Bildern sollte auch der Tabellenuntertitel die Tabelle grob
 beschreiben 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Dies ist wieder der Kurztitel zur Tabelle
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Axiomenschemata
\end_layout

\begin_layout Standard
Hier ein Beispiel wie man Programmcode richtig darstellen könnte:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "backgroundcolor={\color{lightgray}},basicstyle={\normalsize\sffamily},breaklines=true,frame={leftline,bottomline,rightline,topline},language=C,numbers=left,showstringspaces=false,xleftmargin=15pt"
inline false
status open

\begin_layout Plain Layout

#include <stdio.h> 
\end_layout

\begin_layout Plain Layout

main() 
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

        int i;
\end_layout

\begin_layout Plain Layout

        for (i = 0; i<=2; i++)
\end_layout

\begin_layout Plain Layout

        {
\end_layout

\begin_layout Plain Layout

        fork();
\end_layout

\begin_layout Plain Layout

        setvbuf(stdout, NULL, _IOLBF, 0); //(Stream, Pufferangabe, Puffertyp,
 Puffergroesse)
\end_layout

\begin_layout Plain Layout

        printf("PID=%6d, i=%d
\backslash
n", getpid(), i);
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Modifiziertes Programm mit setvbuf()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Unter 
\begin_inset Quotes gld
\end_inset

Dokument –> Einstellungen –> Latexvorspann
\begin_inset Quotes grd
\end_inset

 habe ich für die Hintergrundfarbe folgendes eingefügt:
\end_layout

\begin_layout Itemize

\backslash
definecolor{lightgray}{rgb}{0.8,0.8,0.8}
\end_layout

\begin_layout Standard
Dies legt die Hintergrundfarbe fest.
 Sie kann natürlich nach belieben angepasst werden.
 Wenn ihr Rechtsklick auf das Programmlisting macht und dann unter 
\begin_inset Quotes gld
\end_inset

Einstellungen –> Erweitert
\begin_inset Quotes grd
\end_inset

 geht, seht ihr einige Anpassungen die ich gemacht habe.
 Unter Anderem wird hier auch 15pt von links eingerückt, damit die Zeilennummern
 schön zum Fließtext passen.
 
\end_layout

\begin_layout Standard
\begin_inset Index idx
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Formula $x+y=z^{2}$
\end_inset


\end_layout

\end_body
\end_document
